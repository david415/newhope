use ::params::{ N, Q };
use ::reduce::{ montgomery_reduce, barrett_reduce };


pub const BITREV_TABLE: [u16; N] = [
    0,   512,  256, 768,  128, 640,  384, 896,  64,  576,  320, 832,  192, 704,
    448, 960,  32,  544,  288, 800,  160, 672,  416, 928,  96,  608,  352, 864,
    224, 736,  480, 992,  16,  528,  272, 784,  144, 656,  400, 912,  80,  592,
    336, 848,  208, 720,  464, 976,  48,  560,  304, 816,  176, 688,  432, 944,
    112, 624,  368, 880,  240, 752,  496, 1008, 8,   520,  264, 776,  136, 648,
    392, 904,  72,  584,  328, 840,  200, 712,  456, 968,  40,  552,  296, 808,
    168, 680,  424, 936,  104, 616,  360, 872,  232, 744,  488, 1000, 24,  536,
    280, 792,  152, 664,  408, 920,  88,  600,  344, 856,  216, 728,  472, 984,
    56,  568,  312, 824,  184, 696,  440, 952,  120, 632,  376, 888,  248, 760,
    504, 1016, 4,   516,  260, 772,  132, 644,  388, 900,  68,  580,  324, 836,
    196, 708,  452, 964,  36,  548,  292, 804,  164, 676,  420, 932,  100, 612,
    356, 868,  228, 740,  484, 996,  20,  532,  276, 788,  148, 660,  404, 916,
    84,  596,  340, 852,  212, 724,  468, 980,  52,  564,  308, 820,  180, 692,
    436, 948,  116, 628,  372, 884,  244, 756,  500, 1012, 12,  524,  268, 780,
    140, 652,  396, 908,  76,  588,  332, 844,  204, 716,  460, 972,  44,  556,
    300, 812,  172, 684,  428, 940,  108, 620,  364, 876,  236, 748,  492, 1004,
    28,  540,  284, 796,  156, 668,  412, 924,  92,  604,  348, 860,  220, 732,
    476, 988,  60,  572,  316, 828,  188, 700,  444, 956,  124, 636,  380, 892,
    252, 764,  508, 1020, 2,   514,  258, 770,  130, 642,  386, 898,  66,  578,
    322, 834,  194, 706,  450, 962,  34,  546,  290, 802,  162, 674,  418, 930,
    98,  610,  354, 866,  226, 738,  482, 994,  18,  530,  274, 786,  146, 658,
    402, 914,  82,  594,  338, 850,  210, 722,  466, 978,  50,  562,  306, 818,
    178, 690,  434, 946,  114, 626,  370, 882,  242, 754,  498, 1010, 10,  522,
    266, 778,  138, 650,  394, 906,  74,  586,  330, 842,  202, 714,  458, 970,
    42,  554,  298, 810,  170, 682,  426, 938,  106, 618,  362, 874,  234, 746,
    490, 1002, 26,  538,  282, 794,  154, 666,  410, 922,  90,  602,  346, 858,
    218, 730,  474, 986,  58,  570,  314, 826,  186, 698,  442, 954,  122, 634,
    378, 890,  250, 762,  506, 1018, 6,   518,  262, 774,  134, 646,  390, 902,
    70,  582,  326, 838,  198, 710,  454, 966,  38,  550,  294, 806,  166, 678,
    422, 934,  102, 614,  358, 870,  230, 742,  486, 998,  22,  534,  278, 790,
    150, 662,  406, 918,  86,  598,  342, 854,  214, 726,  470, 982,  54,  566,
    310, 822,  182, 694,  438, 950,  118, 630,  374, 886,  246, 758,  502, 1014,
    14,  526,  270, 782,  142, 654,  398, 910,  78,  590,  334, 846,  206, 718,
    462, 974,  46,  558,  302, 814,  174, 686,  430, 942,  110, 622,  366, 878,
    238, 750,  494, 1006, 30,  542,  286, 798,  158, 670,  414, 926,  94,  606,
    350, 862,  222, 734,  478, 990,  62,  574,  318, 830,  190, 702,  446, 958,
    126, 638,  382, 894,  254, 766,  510, 1022, 1,   513,  257, 769,  129, 641,
    385, 897,  65,  577,  321, 833,  193, 705,  449, 961,  33,  545,  289, 801,
    161, 673,  417, 929,  97,  609,  353, 865,  225, 737,  481, 993,  17,  529,
    273, 785,  145, 657,  401, 913,  81,  593,  337, 849,  209, 721,  465, 977,
    49,  561,  305, 817,  177, 689,  433, 945,  113, 625,  369, 881,  241, 753,
    497, 1009, 9,   521,  265, 777,  137, 649,  393, 905,  73,  585,  329, 841,
    201, 713,  457, 969,  41,  553,  297, 809,  169, 681,  425, 937,  105, 617,
    361, 873,  233, 745,  489, 1001, 25,  537,  281, 793,  153, 665,  409, 921,
    89,  601,  345, 857,  217, 729,  473, 985,  57,  569,  313, 825,  185, 697,
    441, 953,  121, 633,  377, 889,  249, 761,  505, 1017, 5,   517,  261, 773,
    133, 645,  389, 901,  69,  581,  325, 837,  197, 709,  453, 965,  37,  549,
    293, 805,  165, 677,  421, 933,  101, 613,  357, 869,  229, 741,  485, 997,
    21,  533,  277, 789,  149, 661,  405, 917,  85,  597,  341, 853,  213, 725,
    469, 981,  53,  565,  309, 821,  181, 693,  437, 949,  117, 629,  373, 885,
    245, 757,  501, 1013, 13,  525,  269, 781,  141, 653,  397, 909,  77,  589,
    333, 845,  205, 717,  461, 973,  45,  557,  301, 813,  173, 685,  429, 941,
    109, 621,  365, 877,  237, 749,  493, 1005, 29,  541,  285, 797,  157, 669,
    413, 925,  93,  605,  349, 861,  221, 733,  477, 989,  61,  573,  317, 829,
    189, 701,  445, 957,  125, 637,  381, 893,  253, 765,  509, 1021, 3,   515,
    259, 771,  131, 643,  387, 899,  67,  579,  323, 835,  195, 707,  451, 963,
    35,  547,  291, 803,  163, 675,  419, 931,  99,  611,  355, 867,  227, 739,
    483, 995,  19,  531,  275, 787,  147, 659,  403, 915,  83,  595,  339, 851,
    211, 723,  467, 979,  51,  563,  307, 819,  179, 691,  435, 947,  115, 627,
    371, 883,  243, 755,  499, 1011, 11,  523,  267, 779,  139, 651,  395, 907,
    75,  587,  331, 843,  203, 715,  459, 971,  43,  555,  299, 811,  171, 683,
    427, 939,  107, 619,  363, 875,  235, 747,  491, 1003, 27,  539,  283, 795,
    155, 667,  411, 923,  91,  603,  347, 859,  219, 731,  475, 987,  59,  571,
    315, 827,  187, 699,  443, 955,  123, 635,  379, 891,  251, 763,  507, 1019,
    7,   519,  263, 775,  135, 647,  391, 903,  71,  583,  327, 839,  199, 711,
    455, 967,  39,  551,  295, 807,  167, 679,  423, 935,  103, 615,  359, 871,
    231, 743,  487, 999,  23,  535,  279, 791,  151, 663,  407, 919,  87,  599,
    343, 855,  215, 727,  471, 983,  55,  567,  311, 823,  183, 695,  439, 951,
    119, 631,  375, 887,  247, 759,  503, 1015, 15,  527,  271, 783,  143, 655,
    399, 911,  79,  591,  335, 847,  207, 719,  463, 975,  47,  559,  303, 815,
    175, 687,  431, 943,  111, 623,  367, 879,  239, 751,  495, 1007, 31,  543,
    287, 799,  159, 671,  415, 927,  95,  607,  351, 863,  223, 735,  479, 991,
    63,  575,  319, 831,  191, 703,  447, 959,  127, 639,  383, 895,  255, 767,
    511, 1023
];


pub fn bitrev_vector(poly: &mut [u16]) {
    for (i, r) in BITREV_TABLE.iter()
        .map(|&r| r as usize)
        .enumerate()
        .filter(|&(i, r)| i < r)
    {
        poly.swap(i, r);
    }
}

pub fn mul_coefficients(poly: &mut [u16], factors: &[u16]) {
    for i in 0..N {
        poly[i] = montgomery_reduce(poly[i] as u32 * factors[i] as u32);
    }
}

pub fn ntt(a: &mut [u16], omega: &[u16]) {
    for i in Iterator::step_by(0..10, 2) {
        let mut distance = 1 << i;
        for start in 0..distance {
            for (jt, j) in Iterator::step_by(start..(N - 1), 2 * distance).enumerate() {
                let w = omega[jt] as u32;
                let tmp = a[j];
                a[j] = tmp.wrapping_add(a[j + distance]);
                a[j + distance] = montgomery_reduce(
                    w * (tmp as u32 + 3 * Q as u32 - a[j + distance] as u32)
                );
            }
        }

        distance <<= 1;
        for start in 0..distance {
            for (jt, j) in Iterator::step_by(start..(N - 1), 2 * distance).enumerate() {
                let w = omega[jt] as u32;
                let tmp = a[j];
                a[j] = barrett_reduce(tmp.wrapping_add(a[j + distance]));
                a[j + distance] = montgomery_reduce(
                    w * (tmp as u32 + 3 * Q as u32 - a[j + distance] as u32)
                );
            }
        }
    }
}


#[test]
fn test_bitrev_vector() {
    let mut poly = [3; N];
    bitrev_vector(&mut poly);
    for i in 0..N {
        assert_eq!(poly[i], 3);
    }

    let output = [0, 512, 256, 768, 128, 640, 384, 896, 64, 576, 320, 832, 192, 704, 448, 960, 32, 544, 288, 800, 160, 672, 416, 928, 96, 608, 352, 864, 224, 736, 480, 992, 16, 528, 272, 784, 144, 656, 400, 912, 80, 592, 336, 848, 208, 720, 464, 976, 48, 560, 304, 816, 176, 688, 432, 944, 112, 624, 368, 880, 240, 752, 496, 1008, 8, 520, 264, 776, 136, 648, 392, 904, 72, 584, 328, 840, 200, 712, 456, 968, 40, 552, 296, 808, 168, 680, 424, 936, 104, 616, 360, 872, 232, 744, 488, 1000, 24, 536, 280, 792, 152, 664, 408, 920, 88, 600, 344, 856, 216, 728, 472, 984, 56, 568, 312, 824, 184, 696, 440, 952, 120, 632, 376, 888, 248, 760, 504, 1016, 4, 516, 260, 772, 132, 644, 388, 900, 68, 580, 324, 836, 196, 708, 452, 964, 36, 548, 292, 804, 164, 676, 420, 932, 100, 612, 356, 868, 228, 740, 484, 996, 20, 532, 276, 788, 148, 660, 404, 916, 84, 596, 340, 852, 212, 724, 468, 980, 52, 564, 308, 820, 180, 692, 436, 948, 116, 628, 372, 884, 244, 756, 500, 1012, 12, 524, 268, 780, 140, 652, 396, 908, 76, 588, 332, 844, 204, 716, 460, 972, 44, 556, 300, 812, 172, 684, 428, 940, 108, 620, 364, 876, 236, 748, 492, 1004, 28, 540, 284, 796, 156, 668, 412, 924, 92, 604, 348, 860, 220, 732, 476, 988, 60, 572, 316, 828, 188, 700, 444, 956, 124, 636, 380, 892, 252, 764, 508, 1020, 2, 514, 258, 770, 130, 642, 386, 898, 66, 578, 322, 834, 194, 706, 450, 962, 34, 546, 290, 802, 162, 674, 418, 930, 98, 610, 354, 866, 226, 738, 482, 994, 18, 530, 274, 786, 146, 658, 402, 914, 82, 594, 338, 850, 210, 722, 466, 978, 50, 562, 306, 818, 178, 690, 434, 946, 114, 626, 370, 882, 242, 754, 498, 1010, 10, 522, 266, 778, 138, 650, 394, 906, 74, 586, 330, 842, 202, 714, 458, 970, 42, 554, 298, 810, 170, 682, 426, 938, 106, 618, 362, 874, 234, 746, 490, 1002, 26, 538, 282, 794, 154, 666, 410, 922, 90, 602, 346, 858, 218, 730, 474, 986, 58, 570, 314, 826, 186, 698, 442, 954, 122, 634, 378, 890, 250, 762, 506, 1018, 6, 518, 262, 774, 134, 646, 390, 902, 70, 582, 326, 838, 198, 710, 454, 966, 38, 550, 294, 806, 166, 678, 422, 934, 102, 614, 358, 870, 230, 742, 486, 998, 22, 534, 278, 790, 150, 662, 406, 918, 86, 598, 342, 854, 214, 726, 470, 982, 54, 566, 310, 822, 182, 694, 438, 950, 118, 630, 374, 886, 246, 758, 502, 1014, 14, 526, 270, 782, 142, 654, 398, 910, 78, 590, 334, 846, 206, 718, 462, 974, 46, 558, 302, 814, 174, 686, 430, 942, 110, 622, 366, 878, 238, 750, 494, 1006, 30, 542, 286, 798, 158, 670, 414, 926, 94, 606, 350, 862, 222, 734, 478, 990, 62, 574, 318, 830, 190, 702, 446, 958, 126, 638, 382, 894, 254, 766, 510, 1022, 1, 513, 257, 769, 129, 641, 385, 897, 65, 577, 321, 833, 193, 705, 449, 961, 33, 545, 289, 801, 161, 673, 417, 929, 97, 609, 353, 865, 225, 737, 481, 993, 17, 529, 273, 785, 145, 657, 401, 913, 81, 593, 337, 849, 209, 721, 465, 977, 49, 561, 305, 817, 177, 689, 433, 945, 113, 625, 369, 881, 241, 753, 497, 1009, 9, 521, 265, 777, 137, 649, 393, 905, 73, 585, 329, 841, 201, 713, 457, 969, 41, 553, 297, 809, 169, 681, 425, 937, 105, 617, 361, 873, 233, 745, 489, 1001, 25, 537, 281, 793, 153, 665, 409, 921, 89, 601, 345, 857, 217, 729, 473, 985, 57, 569, 313, 825, 185, 697, 441, 953, 121, 633, 377, 889, 249, 761, 505, 1017, 5, 517, 261, 773, 133, 645, 389, 901, 69, 581, 325, 837, 197, 709, 453, 965, 37, 549, 293, 805, 165, 677, 421, 933, 101, 613, 357, 869, 229, 741, 485, 997, 21, 533, 277, 789, 149, 661, 405, 917, 85, 597, 341, 853, 213, 725, 469, 981, 53, 565, 309, 821, 181, 693, 437, 949, 117, 629, 373, 885, 245, 757, 501, 1013, 13, 525, 269, 781, 141, 653, 397, 909, 77, 589, 333, 845, 205, 717, 461, 973, 45, 557, 301, 813, 173, 685, 429, 941, 109, 621, 365, 877, 237, 749, 493, 1005, 29, 541, 285, 797, 157, 669, 413, 925, 93, 605, 349, 861, 221, 733, 477, 989, 61, 573, 317, 829, 189, 701, 445, 957, 125, 637, 381, 893, 253, 765, 509, 1021, 3, 515, 259, 771, 131, 643, 387, 899, 67, 579, 323, 835, 195, 707, 451, 963, 35, 547, 291, 803, 163, 675, 419, 931, 99, 611, 355, 867, 227, 739, 483, 995, 19, 531, 275, 787, 147, 659, 403, 915, 83, 595, 339, 851, 211, 723, 467, 979, 51, 563, 307, 819, 179, 691, 435, 947, 115, 627, 371, 883, 243, 755, 499, 1011, 11, 523, 267, 779, 139, 651, 395, 907, 75, 587, 331, 843, 203, 715, 459, 971, 43, 555, 299, 811, 171, 683, 427, 939, 107, 619, 363, 875, 235, 747, 491, 1003, 27, 539, 283, 795, 155, 667, 411, 923, 91, 603, 347, 859, 219, 731, 475, 987, 59, 571, 315, 827, 187, 699, 443, 955, 123, 635, 379, 891, 251, 763, 507, 1019, 7, 519, 263, 775, 135, 647, 391, 903, 71, 583, 327, 839, 199, 711, 455, 967, 39, 551, 295, 807, 167, 679, 423, 935, 103, 615, 359, 871, 231, 743, 487, 999, 23, 535, 279, 791, 151, 663, 407, 919, 87, 599, 343, 855, 215, 727, 471, 983, 55, 567, 311, 823, 183, 695, 439, 951, 119, 631, 375, 887, 247, 759, 503, 1015, 15, 527, 271, 783, 143, 655, 399, 911, 79, 591, 335, 847, 207, 719, 463, 975, 47, 559, 303, 815, 175, 687, 431, 943, 111, 623, 367, 879, 239, 751, 495, 1007, 31, 543, 287, 799, 159, 671, 415, 927, 95, 607, 351, 863, 223, 735, 479, 991, 63, 575, 319, 831, 191, 703, 447, 959, 127, 639, 383, 895, 255, 767, 511, 1023];
    let mut poly = [0; N];
    for i in 0..N {
        poly[i] = i as u16;
    }
    bitrev_vector(&mut poly);
    assert_eq!(poly[..], output[..]);
}

#[test]
fn test_mul_coefficients() {
    let (mut r, a) = ([0; N], [4; N]);
    mul_coefficients(&mut r, &a);
    for i in 0..N {
        assert_eq!(r[i], 0);
    }

    let (mut r, a) = ([3; N], [4; N]);
    mul_coefficients(&mut r, &a);
    for i in 0..N {
        assert_eq!(r[i], 6912);
    }

    let (mut r, a) = ([355; N], [488; N]);
    mul_coefficients(&mut r, &a);
    for i in 0..N {
        assert_eq!(r[i], 11849);
    }

    let (mut r, a) = ([35572; N], [48839; N]);
    mul_coefficients(&mut r, &a);
    for i in 0..N {
        assert_eq!(r[i], 16280);
    }
}

#[test]
fn test_ntt() {
    use ::params::OMEGAS_MONTGOMERY;

    let mut r = [3; N];
    ntt(&mut r, &OMEGAS_MONTGOMERY);
    assert_eq!(r[0], 3072);
    for i in 1..N {
        assert_eq!(r[i], 12289);
    }

    let mut r = [33333; N];
    ntt(&mut r, &OMEGAS_MONTGOMERY);
    assert_eq!(r[0], 13266);
    for i in 1..N {
        assert_eq!(r[i], 12289);
    }

    let output = [7638, 11777, 7824, 8027, 11596, 12707, 3962, 3075, 13466, 4191, 3327, 2916, 2667, 7524, 4510, 9165, 7778, 4545, 6967, 2945, 9472, 10391, 10144, 14317, 5719, 9862, 9015, 10253, 8914, 12299, 4465, 13348, 11946, 3546, 2611, 9173, 14610, 11758, 6180, 10278, 12322, 9758, 4345, 9991, 6005, 9895, 7046, 11642, 7225, 5137, 12225, 2788, 6665, 2858, 3704, 10204, 2441, 12566, 11190, 6989, 4943, 12942, 4226, 8241, 7672, 10127, 2243, 6995, 4495, 8055, 11373, 6360, 3385, 1729, 7005, 4067, 8775, 11278, 9231, 12329, 11678, 8933, 11344, 13609, 4856, 4829, 7905, 9996, 2073, 11114, 4844, 13403, 8004, 9254, 9357, 2842, 11273, 13017, 14582, 6240, 13791, 2766, 5856, 11426, 3919, 2970, 12514, 6665, 2959, 2699, 8860, 7984, 5969, 2483, 4000, 5225, 2429, 2966, 4732, 7737, 11678, 11723, 4085, 9163, 2407, 8686, 9007, 10283, 12944, 14155, 10232, 5505, 13852, 2882, 7977, 5410, 13780, 13445, 6037, 11405, 8293, 9100, 10334, 3410, 10211, 13733, 3044, 10345, 8714, 12798, 10156, 6700, 10611, 6402, 4157, 9130, 10712, 13607, 9070, 10195, 2847, 3370, 6868, 12253, 12154, 12214, 7615, 9209, 9781, 1755, 9254, 5578, 7744, 12367, 7197, 9008, 13033, 10229, 12847, 12034, 5462, 10957, 13490, 3926, 7812, 11280, 2442, 3126, 5544, 10330, 13964, 9925, 12284, 7091, 13507, 6051, 13443, 4252, 12287, 2491, 2859, 4965, 4131, 2885, 8961, 13373, 9449, 2321, 3445, 8169, 10095, 6956, 3018, 8345, 5316, 7857, 9261, 9882, 11231, 8433, 13453, 13660, 9713, 6125, 4887, 3971, 12375, 4274, 11319, 10081, 2514, 8329, 4786, 13052, 4704, 8285, 14355, 10567, 8859, 12597, 8947, 11839, 11329, 6718, 10392, 5016, 12791, 3539, 2931, 8165, 13235, 3588, 12705, 13129, 13779, 12112, 12599, 11101, 5211, 2600, 1804, 10439, 10267, 1996, 8301, 3710, 4999, 10664, 12443, 6951, 4418, 7772, 5404, 9345, 11625, 12745, 5001, 1184, 5300, 11532, 7192, 2594, 9386, 12043, 2406, 8505, 12831, 5534, 6335, 2324, 4774, 832, 11273, 7111, 6432, 1802, 7334, 11370, 2269, 12475, 8344, 12046, 8054, 11023, 7536, 1465, 12493, 9615, 10967, 3529, 8047, 828, 10441, 6395, 12277, 8549, 12945, 12753, 9972, 8838, 7937, 5262, 6049, 6382, 12326, 4432, 6246, 12861, 1346, 2152, 4830, 7967, 8217, 9627, 7037, 5860, 4889, 2513, 7609, 1399, 7180, 2748, 5656, 4093, 1064, 11833, 9643, 9797, 11449, 9128, 12986, 6488, 2975, 5207, 8734, 1322, 11604, 11249, 4810, 6298, 6715, 2671, 5976, 5517, 5015, 7127, 3544, 11344, 12676, 3137, 9123, 4405, 4665, 8753, 9673, 1486, 10950, 3199, 7892, 6525, 3525, 6514, 9322, 5403, 4599, 9536, 8791, 8211, 7054, 8910, 11170, 12201, 932, 9450, 3691, 12901, 12293, 3966, 4477, 2438, 9158, 9270, 8270, 3226, 4441, 4005, 10997, 4065, 8213, 12844, 7512, 6843, 6185, 6239, 1708, 12406, 3083, 8147, 6577, 8031, 4066, 6656, 2105, 10833, 1573, 12540, 4025, 12489, 6078, 3655, 5259, 5497, 3598, 7792, 3867, 3053, 9582, 11276, 2640, 12494, 4296, 1191, 1074, 11179, 9862, 9149, 7598, 5009, 5297, 9880, 9159, 4753, 11361, 4621, 3823, 10564, 5473, 5772, 8361, 8888, 10818, 12147, 11466, 10133, 7221, 13106, 3036, 7471, 11081, 12181, 1909, 4084, 6355, 11805, 7929, 2109, 6741, 9629, 6500, 8567, 6062, 11233, 8130, 6702, 1517, 8399, 11819, 9892, 8123, 10792, 989, 2072, 3279, 12142, 11943, 9382, 1293, 13075, 12334, 9159, 5920, 10131, 10872, 6850, 9449, 13107, 8765, 4897, 4831, 6044, 2018, 7863, 8214, 4424, 10263, 6243, 7426, 7390, 3516, 11469, 2712, 5437, 1409, 2156, 6337, 3128, 12236, 11501, 10484, 2905, 12627, 12434, 8978, 10215, 11292, 1495, 4038, 2395, 12751, 3888, 10740, 5585, 4151, 1054, 4179, 3720, 5781, 2658, 5516, 10178, 4352, 12771, 5806, 8203, 10372, 12395, 1176, 4816, 9245, 11470, 4556, 2154, 815, 12429, 1439, 3399, 3920, 6515, 6688, 1723, 8458, 7666, 896, 7534, 3122, 2407, 11089, 7278, 4683, 3138, 2395, 1108, 11207, 11096, 7865, 12082, 9641, 1011, 2675, 9234, 8414, 4495, 8179, 6790, 7022, 8632, 6179, 12087, 8256, 12036, 10588, 1454, 10176, 5631, 8191, 4256, 5704, 4140, 7158, 12170, 10573, 6048, 6072, 5444, 4769, 11732, 3948, 8222, 1284, 8282, 7816, 9061, 4011, 3017, 2619, 9849, 7804, 8321, 12253, 11675, 8590, 2837, 11229, 12375, 1111, 3377, 5203, 4076, 3490, 2751, 11789, 6884, 2959, 5773, 8732, 5762, 4389, 9088, 1211, 10801, 2608, 3534, 7592, 7882, 3158, 9150, 11390, 943, 8737, 5160, 7242, 6770, 6305, 9616, 5446, 5989, 7471, 1038, 653, 10965, 3547, 7080, 7266, 5799, 11584, 3159, 808, 2490, 2638, 12743, 11097, 8194, 6625, 9539, 5077, 10888, 4672, 9774, 6888, 6427, 5244, 2660, 4040, 4320, 7451, 10135, 10815, 11715, 6035, 7855, 12220, 5905, 6232, 7025, 8449, 3449, 2309, 11823, 11601, 3738, 12293, 5892, 1720, 11459, 4234, 8758, 1290, 2672, 12077, 10822, 4241, 1264, 4227, 12530, 3913, 12101, 10012, 917, 4827, 10485, 5849, 5176, 984, 11455, 7507, 9963, 3906, 6753, 11739, 3782, 9851, 12533, 2895, 9693, 4969, 755, 6981, 11103, 7256, 11831, 656, 2942, 6373, 4515, 7863, 5336, 12103, 1623, 7282, 8577, 3860, 10291, 2014, 1848, 10453, 9687, 7070, 1186, 3797, 12464, 10791, 11447, 11841, 8699, 11335, 4122, 9230, 8748, 11779, 7271, 1865, 5569, 952, 12737, 2830, 11979, 3422, 1720, 10191, 4002, 7577, 11524, 7375, 3958, 9767, 2206, 938, 8013, 12195, 8316, 5354, 6162, 2568, 10916, 11093, 3854, 1050, 2405, 2900, 4430, 6965, 3942, 9239, 5331, 2186, 4118, 8332, 9966, 2832, 11203, 3296, 9402, 8150, 7322, 9302, 9796, 12283, 8035, 11103, 6236, 11063, 5196, 4102, 2362, 10606, 1957, 6713, 9161, 9839, 1007, 4349, 8361, 11080, 1330, 6795, 12542, 11723, 2058, 11033, 3279, 5084, 12209, 4513, 6709, 3027, 10532, 2380, 3078, 4666, 12362, 12392, 12323, 5413, 8917, 7394, 2092, 3211, 10969, 1545, 3157, 8124, 5885, 1550, 5587, 2125, 11778, 3543, 1942, 9237, 10843, 1566, 8877, 1947, 3187, 3964, 882, 6244, 11131, 10670, 6877, 4304, 9405, 10694, 6782, 2049, 10421, 3444, 2004, 3274, 3601, 9850, 3124, 8196, 12853, 12772, 4550, 7549, 9321, 9828, 7062, 8281, 9804, 5808, 4303, 3421, 9588, 9298, 5622, 12056, 9317, 8242, 861, 6425, 9521, 10755, 6047, 9988, 11559, 11257, 9445, 2924, 3033, 4253, 11173, 7437, 1173, 10088, 2291, 4376, 7458, 7401, 10967, 937, 3354, 12388, 12247, 3050, 1009, 3482, 8220, 5276, 10558, 8776, 5927, 908, 4232, 7762, 5292, 10038, 2160, 8714, 4046, 8055, 11634, 7314, 5298, 1091, 12010, 9720, 2083, 8577, 9429, 5592, 9499, 12345, 7150, 4552, 645, 5235, 2392, 6252, 2296, 7936, 2529, 12128, 2009, 6101, 529, 9936, 3114, 9670, 8741, 10584, 11228, 7816, 12277, 3343, 2034, 3266, 2425, 6442, 10259, 2137, 1896, 2785, 9342, 5314, 7742, 3999, 3122, 7771, 4763, 9590, 9371, 8954, 8096, 10984, 9212, 8319, 11869, 661, 4260, 4457, 12799];
    let mut r = [0; N];
    for i in 0..N {
        r[i] = i as u16;
    }
    ntt(&mut r, &OMEGAS_MONTGOMERY);
    assert_eq!(r[..], output[..]);
}
